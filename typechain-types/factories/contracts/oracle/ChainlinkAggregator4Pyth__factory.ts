/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChainlinkAggregator4Pyth,
  ChainlinkAggregator4PythInterface,
} from "../../../contracts/oracle/ChainlinkAggregator4Pyth";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isKeeper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswerOracle",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswerTimestampOracle",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestampOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRoundId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isKeeper",
        type: "bool",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int192[]",
        name: "answers",
        type: "int192[]",
      },
    ],
    name: "setLatestAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001437380380620014378339810160408190526200003491620000cc565b600080546001600160a01b0319163317905560ff841660805260066200005b848262000265565b506001805463ffffffff60a01b19169055600280546001600160a01b0319166001600160a01b03939093169290921790915560035550620003319050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000c757600080fd5b919050565b60008060008060808587031215620000e357600080fd5b845160ff81168114620000f557600080fd5b602086810151919550906001600160401b03808211156200011557600080fd5b818801915088601f8301126200012a57600080fd5b8151818111156200013f576200013f62000099565b604051601f8201601f19908116603f011681019083821181831017156200016a576200016a62000099565b816040528281528b868487010111156200018357600080fd5b600093505b82841015620001a7578484018601518185018701529285019262000188565b6000868483010152809850505050505050620001c660408601620000af565b6060959095015193969295505050565b600181811c90821680620001eb57607f821691505b6020821081036200020c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026057600081815260208120601f850160051c810160208610156200023b5750805b601f850160051c820191505b818110156200025c5782815560010162000247565b5050505b505050565b81516001600160401b0381111562000281576200028162000099565b6200029981620002928454620001d6565b8462000212565b602080601f831160018114620002d15760008415620002b85750858301515b600019600386901b1c1916600185901b1785556200025c565b600085815260208120601f198616915b828110156200030257888601518255948401946001909101908401620002e1565b5085821015620003215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516110c76200037060003960008181610111015281816104bd015281816106a301528181610a1101528181610b670152610c6101526110c76000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c8063313ce5671461010c5780634bc6315a1461014a57806350d25bcd1461016357806354fd4d501461018a578063668a0f02146101925780636ba42aaa146101a75780637284e416146101da57806379ba5097146101ef5780638205bf6a146101f95780638da5cb5b1461022d5780638e58c088146102585780639a6fc8f514610260578063b5ab58dc146102a7578063b633620c146102ba578063b958d971146102cd578063d1b9e853146102d5578063dd9b2314146102e8578063e1647f2b146102fb578063f2fde38b14610303578063f5613c6f14610316578063feaf968c14610333575b600080fd5b6101337f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020015b60405180910390f35b61015563ffffffff81565b604051908152602001610141565b600154600160a01b900463ffffffff1660009081526004602052604090205460170b610155565b610155600481565b600154600160a01b900463ffffffff16610155565b6101ca6101b5366004610d69565b60056020526000908152604090205460ff1681565b6040519015158152602001610141565b6101e261033b565b6040516101419190610d84565b6101f76103cd565b005b600154600160a01b900463ffffffff16600090815260046020526040902054600160c01b90046001600160401b0316610155565b600054610240906001600160a01b031681565b6040516001600160a01b039091168152602001610141565b61015561047c565b61027361026e366004610dd2565b610540565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a001610141565b6101556102b5366004610dfb565b6105f1565b6101556102c8366004610dfb565b610623565b610155610662565b6101f76102e3366004610e14565b6106fe565b6101f76102f6366004610e78565b610753565b6101556109d0565b6101f7610311366004610d69565b610aa6565b61031e610b21565b60408051928352602083019190915201610141565b610273610c15565b60606006805461034a90610f3c565b80601f016020809104026020016040519081016040528092919081815260200182805461037690610f3c565b80156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b5050505050905090565b6001546001600160a01b031633146104255760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6002546000906001600160a01b03161561052c576002546003546040516303ab61a360e01b81526000926001600160a01b0316916303ab61a3916104e591907f000000000000000000000000000000000000000000000000000000000000000090600401610f76565b6040805180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610f87565b9392505050565b50600154600160a01b900463ffffffff1690565b600080600080600063ffffffff866001600160501b031611156040518060400160405280600f81526020016e139bc819185d18481c1c995cd95b9d608a1b8152509061059f5760405162461bcd60e51b815260040161041c9190610d84565b5050505063ffffffff8316600090815260046020908152604091829020825180840190935254601781900b808452600160c01b9091046001600160401b03169290910182905293949092508291508490565b600063ffffffff82111561060757506000919050565b5063ffffffff1660009081526004602052604090205460170b90565b600063ffffffff82111561063957506000919050565b5063ffffffff16600090815260046020526040902054600160c01b90046001600160401b031690565b6002546000906001600160a01b0316156106cb576002546003546040516303ab61a360e01b81526000926001600160a01b0316916303ab61a3916104e591907f000000000000000000000000000000000000000000000000000000000000000090600401610f76565b50600154600160a01b900463ffffffff16600090815260046020526040902054600160c01b90046001600160401b031690565b6000546001600160a01b031633146107285760405162461bcd60e51b815260040161041c90610fab565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b3360009081526005602052604090205460ff166107ad5760405162461bcd60e51b81526020600482015260186024820152773ab83230ba329030b739bbb2b91d103337b93134b23232b760411b604482015260640161041c565b60018054600160a01b900463ffffffff169060146107ca83610ff1565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060005b600182516107fa9190611014565b8110156108a05760008261080f83600161102d565b8151811061081f5761081f611040565b602002602001015160170b83838151811061083c5761083c611040565b602002602001015160170b131590508061088d5760405162461bcd60e51b8152602060048201526012602482015271185b9cddd95c9cc81b9bdd081cdbdc9d195960721b604482015260640161041c565b508061089881611056565b9150506107ec565b50600081600283516108b2919061106f565b815181106108c2576108c2611040565b602090810291909101810151604080518082018252601783900b81526001600160401b03428181168387019081526001805463ffffffff600160a01b91829004811660009081526004909a52878a2096519351909516600160c01b026001600160c01b03909316929092179094559254935194965091909204909116917f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac602719161096e9190815260200190565b60405180910390a3600160149054906101000a900463ffffffff1663ffffffff168160170b7f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f426040516109c491815260200190565b60405180910390a35050565b6002546000906001600160a01b031615610a80576002546003546040516303ab61a360e01b81526000926001600160a01b0316916303ab61a391610a3991907f000000000000000000000000000000000000000000000000000000000000000090600401610f76565b6040805180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610f87565b5092915050565b50600154600160a01b900463ffffffff1660009081526004602052604090205460170b90565b6000546001600160a01b03163314610ad05760405162461bcd60e51b815260040161041c90610fab565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60025460009081906001600160a01b031615610bda576002546003546040516303ab61a360e01b815260009283926001600160a01b03909116916303ab61a391610b8f917f000000000000000000000000000000000000000000000000000000000000000090600401610f76565b6040805180830381865afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190610f87565b909590945092505050565b5050600154600160a01b900463ffffffff16600090815260046020526040902054601781900b91600160c01b9091046001600160401b031690565b60025460009081908190819081906001600160a01b031615610cee576002546003546040516303ab61a360e01b815260009283926001600160a01b03909116916303ab61a391610c89917f000000000000000000000000000000000000000000000000000000000000000090600401610f76565b6040805180830381865afa158015610ca5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc99190610f87565b600154600160a01b900463ffffffff1698509096509450849350869250610d46915050565b5050600154600160a01b900463ffffffff16600081815260046020908152604091829020825180840190935254601781900b808452600160c01b9091046001600160401b031692909101829052919450909250905080835b9091929394565b80356001600160a01b0381168114610d6457600080fd5b919050565b600060208284031215610d7b57600080fd5b61052582610d4d565b600060208083528351808285015260005b81811015610db157858101830151858201604001528201610d95565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610de457600080fd5b81356001600160501b038116811461052557600080fd5b600060208284031215610e0d57600080fd5b5035919050565b60008060408385031215610e2757600080fd5b610e3083610d4d565b915060208301358015158114610e4557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b8035601781900b8114610d6457600080fd5b60006020808385031215610e8b57600080fd5b82356001600160401b0380821115610ea257600080fd5b818501915085601f830112610eb657600080fd5b813581811115610ec857610ec8610e50565b8060051b604051601f19603f83011681018181108582111715610eed57610eed610e50565b604052918252848201925083810185019188831115610f0b57600080fd5b938501935b82851015610f3057610f2185610e66565b84529385019392850192610f10565b98975050505050505050565b600181811c90821680610f5057607f821691505b602082108103610f7057634e487b7160e01b600052602260045260246000fd5b50919050565b91825260ff16602082015260400190565b60008060408385031215610f9a57600080fd5b505080516020909101519092909150565b60208082526016908201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681810361100a5761100a610fdb565b6001019392505050565b8181038181111561102757611027610fdb565b92915050565b8082018082111561102757611027610fdb565b634e487b7160e01b600052603260045260246000fd5b60006001820161106857611068610fdb565b5060010190565b60008261108c57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122075f0b09067c2e1321387bbb35ab643eb37bbe4f291d29bc43cb6a8fb652794a064736f6c63430008120033";

type ChainlinkAggregator4PythConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkAggregator4PythConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkAggregator4Pyth__factory extends ContractFactory {
  constructor(...args: ChainlinkAggregator4PythConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _decimals: PromiseOrValue<BigNumberish>,
    _description: PromiseOrValue<string>,
    _adapter: PromiseOrValue<string>,
    _id: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkAggregator4Pyth> {
    return super.deploy(
      _decimals,
      _description,
      _adapter,
      _id,
      overrides || {}
    ) as Promise<ChainlinkAggregator4Pyth>;
  }
  override getDeployTransaction(
    _decimals: PromiseOrValue<BigNumberish>,
    _description: PromiseOrValue<string>,
    _adapter: PromiseOrValue<string>,
    _id: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _decimals,
      _description,
      _adapter,
      _id,
      overrides || {}
    );
  }
  override attach(address: string): ChainlinkAggregator4Pyth {
    return super.attach(address) as ChainlinkAggregator4Pyth;
  }
  override connect(signer: Signer): ChainlinkAggregator4Pyth__factory {
    return super.connect(signer) as ChainlinkAggregator4Pyth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkAggregator4PythInterface {
    return new utils.Interface(_abi) as ChainlinkAggregator4PythInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkAggregator4Pyth {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkAggregator4Pyth;
  }
}
